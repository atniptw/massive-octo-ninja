package Sudoku;

import java.util.ArrayList;
import java.util.Iterator;

public class SudokuColumn {

	ArrayList<CellBlock> columnList;
	
	public SudokuColumn(ArrayList<CellBlock> columnList){
		this.columnList = new ArrayList<CellBlock>();
		Iterator<CellBlock> iterator = columnList.iterator();
		while(iterator.hasNext()) {
			this.columnList.add(iterator.next());
		}
	}
	
	public ArrayList<CellBlock> getColumnList() {
		return this.columnList;
	}
	
	public boolean isValidColumn() {
		for (int i = 0; i < this.columnList.size(); i++) {
			for (int j = i + 1; j < this.columnList.size(); j++) {
				if (this.columnList.get(i).getAnswer() == this.columnList.get(j).getAnswer()){
					return false;
				}
			}
		}
		return true;
	}
	
	public ArrayList<CellBlock> getConflictingCells() {
		ArrayList<CellBlock> conflicts = new ArrayList<CellBlock>();
		for (int i = 0; i < this.columnList.size(); i++) {
			for (int j = 0; j < this.columnList.size(); j++) {
				if ()
			}
		}
		return conflicts;
	}
	
}
